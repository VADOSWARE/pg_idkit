name: Build pg_idkit

on: [push]

jobs:
  ## Build the project
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust_container_version: [ "1.63" ]
        alpine_postgresql_package: [ "postgresql14" ]
        alpine_postgresql_version: [ "14.5-r0" ]

    container:
      image: "rust:${{ matrix.rust_container_version }}-bullseye"
      env:
        CARGO_HOME: /usr/local/cargo

    steps:
      # Checkout the repo
      - uses: actions/checkout@v3

      ##################
      # Setup Postgres #
      ##################

      - name: Add postgres repo
        run: sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt bullseye-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

      - name: Add postgresql.org PGP keys
        run: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add

      - name: Add postgres user to root group
        run: |
          useradd --user-group --system --create-home --no-log-init idkit && \
          usermod -aG sudo idkit && \
          chown -R idkit /home/idkit && \
          addgroup idkit root

      ########################
      # Install dependencies #
      ########################

      - name: Install NPM repository
        run: |
          curl -fsSL https://deb.nodesource.com/setup_16.x | bash -

      - name: Apt dependencies
        run: |
          apt-get update && \
          apt-get install -y --no-install-recommends ca-certificates \
          git build-essential libpq-dev \
          postgresql postgresql-server-dev-14 \
          curl libreadline6-dev zlib1g-dev libclang-dev \
          pkg-config cmake nodejs

      ##############################
      # Install toolchains & cache #
      ##############################

      # Setup rust toolchain
      - name: Setup rust toolchain
        run: |
          su idkit -c "rustup toolchain install stable --profile minimal"

      - name: Cache CARGO_HOME
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            /usr/local/cargo
          key: pg_idkit-tests-rust-${{ matrix.rust_container_version }}-pg-${{ matrix.alpine_postgresql_version}}-cargo-${{ runner.os }}

      # - name: Cache sccache directory
      #   uses: actions/cache@v2
      #   continue-on-error: false
      #   with:
      #     path: /var/cache/sccache
      #     key: pg_idkit-tests-sccache-${{ matrix.rust_container_version }}-pg-${{ matrix.alpine_postgresql_version}}-cargo-${{ runner.os }}

      - name: Cache apt install
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            /var/cache/apt
          key: pg_idkit-tests-apt-cache-${{ matrix.rust_container_version }}-pg-${{ matrix.alpine_postgresql_version}}-cargo-${{ runner.os }}

      # #################
      # # Setup sccache #
      # #################

      # - name: Start sccache server
      #   run: /usr/local/cargo/bin/sccache --start-server

      # - name: Print sccache stats (before run)
      #   run: /usr/local/cargo/bin/sccache --show-stats

      ###############
      # Setup Cargo #
      ###############

      - name: print home and other vars
        run: |
          su idkit -c "echo $CARGO_HOME"

      - name: print home and other vars
        run: |
          su idkit -c "cargo cache -i"

      # Install cargo-cache
      - name: Install cargo bins
        run: |
          su idkit -c "cargo install cargo-cache cargo-pgx"

      # Initialize pgx
      - name: Initialize pgx
        run: |
          su idkit -c "cargo pgx init --pg14 $(which pg_config)"

      # https://github.com/actions/runner/issues/2058
      - name: CHOWN codebase to idkit user
        run: |
          chown -R idkit $GITHUB_WORKSPACE

      ##############
      # Code Tests #
      ##############

      # Run cargo check
      - name: Run cargo check
        run: |
          su idkit -c "cargo check"

      # Run cargo test
      - name: Run cargo test
        run: |
          su idkit -c "cargo test"

      # Run cargo pgx-text
      - name: Run cargo pgx-test
        run: |
          su idkit -c "cargo pgx-test"

      ###########
      # Cleanup #
      ###########

      # - name: Stop sccache server
      #   run: /usr/local/cargo/bin/sccache --stop-server || true
