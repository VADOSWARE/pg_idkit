name: build-rpm
description: |
  Build an RPM for pg_idkit

inputs:
  artifact-upload:
    type: boolean
    description: |
      Whether to upload an artifact or not
  artifact-name:
    type: string
    description: |
      Desired artifact name (will replace the natural name)
  gh-runner:
    type: string
    default: ubuntu-latest
    decription: |
      GitHub runner to use
  rpm-arch:
    type: string
    default: x86_64
    decription: |
      Architecture to use while building the RPM
  pgrx-pg-version:
    type: string
    default: pg16
    decription: |
      PGRX version (ex. 'pg15', 'pg16')
  pg-version:
    type: string
    default: 16.4
    decription: |
      Postgres version (ex. '15.8', '16.4')
  cargo-pgrx-version:
    type: string
    default: 0.13.1
    decription: |
      cargo-pgrx version (ex. '0.13.1)
  user:
    type: string
    default: runner

outputs: {}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2.7.8

    - name: Cache default PGRX_HOME
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      continue-on-error: false
      with:
        path: |
          /home/runner/.pgrx
        key: pg_idkit-pkg-rpm-pgrx-${{ inputs.rpm-arch }}-${{ inputs.gh-runner }}

    - name: Install Rust deps
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-get,just,cargo-generate-rpm,cargo-pgrx@${{ inputs.cargo-pgrx-version }}

    - name: Initialize cargo-pgrx
      shell: bash
      env:
        PGRX_PG_VERSION: ${{ inputs.pgrx-pg-version }}
        PKG_PG_VERSION: ${{ inputs.pg-version }}
      run: |
        [[ -d /home/runner/.pgrx ]] || cargo pgrx init

    - name: Build RPM
      shell: bash
      env:
        DOCKER_BUILD_USER: ${{ inputs.user }}
        PGRX_PG_VERSION: ${{ inputs.pgrx-pg-version }}
        PKG_PG_VERSION: ${{ inputs.pg-version }}
      run: just package build-rpm

    - name: Get RPM output path
      id: rpm-output
      shell: bash
      env:
        DOCKER_BUILD_USER: ${{ inputs.user }}
        PGRX_PG_VERSION: ${{ inputs.pgrx-pg-version }}
        PKG_PG_VERSION: ${{ inputs.pg-version }}
      run: |
        echo path=$(just print-rpm-output-path) >> $GITHUB_OUTPUT
        echo filename=$(just print-rpm-output-file-name) >> $GITHUB_OUTPUT

    - name: Upload artifact
      if: ${{ inputs.artifact-upload }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: ${{ steps.rpm-output.outputs.filename }}
        path: ${{ steps.rpm-output.outputs.path }}
