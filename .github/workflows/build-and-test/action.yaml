name: build-and-test

description: Build and test pg_idkit (meant to run inside pg_idkit/builder container)

inputs:
  artifact-upload:
    type: boolean
    default: false
    description: |
      Desired artifact name (will replace the natural name)
  artifact-tarball-suffix:
    type: string
    default: "musl"
    description: |
      Suffix that will be used on the tarball artifact (ex. '-musl')
  rust-container-version:
    type: string
    default: 1.85.1
    description: |
      Version of rust to use in the container
  apt-cache-dir:
    type: string
    default: /var/cache/apt
  apk-cache-dir:
    type: string
    default: /var/cache/apk
  cargo-home-dir:
    type: string
    default: /usr/local/cargo
  cargo-target-dir:
    type: string
    default: /usr/local/build/target
  sccache-dir:
    type: string
    default: /usr/local/sccache
  cargo-build-rustc-wrapper:
    type: string
    default: /usr/local/cargo/bin/sccache
  cargo-env-incremental:
    type: string
    default: "0"
  cargo-env-profile:
    type: string
    default: ci
  user:
    type: string
    default: idkit
  pgrx-pg-version:
    type: string
    default: pg17
    decription: |
      PGRX version (ex. 'pg17')
  pkg-pg-version:
    type: string
    default: 17.4
    decription: |
      Postgres version (ex. '17.4') used for packaging
  libc:
    type: string
    required: true
    default: gnu
    description: |
      libc implementation to build under (either 'gnu' or 'musl')

outputs: {}

runs:
  using: "composite"
  steps:
    # Checkout the repo
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    #########
    # Cache #
    #########

    - name: Cache CARGO_HOME
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      continue-on-error: false
      with:
        key: pg_idkit-tests-rust-${{ inputs.rust-container-version }}-cargo-${{ runner.os }}-${{ inputs.artifact-tarball-suffix }}
        path: |
          ${{ inputs.cargo-home-dir }}

    - name: Cache apt install
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      if: ${{ inputs.libc == 'gnu' }} # gnu ~= OS w/ apt installed
      continue-on-error: false
      with:
        key: pg_idkit-tests-apt-cache-${{ inputs.rust-container-version }}-cargo-${{ runner.os }}-${{ inputs.artifact-tarball-suffix }}
        path: |
          ${{ inputs.apt-cache-dir }}

    - name: Cache apk install
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      if: ${{ inputs.libc == 'musl' }} # musl ~= alpine
      continue-on-error: false
      with:
        key: pg_idkit-tests-apk-cache-${{ inputs.rust-container-version }}-cargo-${{ runner.os }}-${{ inputs.artifact-tarball-suffix }}
        path: |
          ${{ inputs.apk-cache-dir }}

    - name: Cache sccache
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      continue-on-error: false
      with:
        key: pg_idkit-tests-sccache-${{ inputs.rust-container-version }}-cargo-${{ runner.os }}-${{ inputs.artifact-tarball-suffix }}
        path: |
          ${{ inputs.sccache-dir }}

    - name: Cache pgrx init
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      continue-on-error: false
      with:
        key: pg_idkit-tests-pgrx-init-${{ inputs.rust-container-version }}-cargo-${{ runner.os }}-${{ inputs.artifact-tarball-suffix }}
        path: |
          /home/${{ inputs.user }}/.pgrx

    #########
    # Setup #
    #########

    - name: Add idkit to group
      shell: sh
      run: |
        chgrp -R idkit $HOME &&
        chgrp -R idkit /__w/pg_idkit &&
        chmod g+w -R /__w/pg_idkit

    # Add directory used by worker as safe dir for git
    - name: install utils for alpine
      if: ${{ inputs.libc == 'musl' }} # musl ~= alpine
      shell: sh
      run: |
        apk add --no-cache git coreutils bash clang clang-dev clang-libs \
        coreutils curl gcc make musl-dev openssl-dev util-linux-dev


    # Add directory used by worker as safe dir for git
    - name: Add git safe dir
      shell: sh
      run: |
        git config --global --add safe.directory /__w/pg_idkit/pg_idkit
        su idkit -c "git config --global --add safe.directory /__w/pg_idkit/pg_idkit"

    ###############
    # Build/Tests #
    ###############

    # Initialize cargo-pgrx if necessary
    - name: Initialize cargo-pgrx
      shell: sh
      env:
        CARGO_BUILD_RUSTC_WRAPPER: ${{ inputs.cargo-build-rustc-wrapper }}
        CARGO_HOME: ${{ inputs.cargo-home-dir }}
        CARGO_INCREMENTAL: ${{ inputs.cargo-env-incrmental }}
        CARGO_PROFILE: ${{ inputs.cargo-profile }}
        CARGO_TARGET_DIR: ${{ inputs.cargo-target-dir }}
        PGRX_PG_VERSION: ${{ inputs.pgrx-pg-version }}
        PGRX_PKG_PATH_PREFIX: ${{ inputs.cargo-target-dir }}
        PKG_PG_VERSION: ${{ inputs.pkg-pg-version }}
        SCCACHE_DIR: ${{ inputs.sccache-dir }}
        DOCKER_BUILD_USER: ${{ inputs.user }}
      run: |
        cargo pgrx --version
        su idkit -c "just pgrx-init"

    # Run cargo check
    - name: Run cargo check
      shell: sh
      env:
        CARGO_BUILD_RUSTC_WRAPPER: ${{ inputs.cargo-build-rustc-wrapper }}
        CARGO_HOME: ${{ inputs.cargo-home-dir }}
        CARGO_INCREMENTAL: ${{ inputs.cargo-env-incrmental }}
        CARGO_PROFILE: ${{ inputs.cargo-profile }}
        CARGO_TARGET_DIR: ${{ inputs.cargo-target-dir }}
        PGRX_PG_VERSION: ${{ inputs.pgrx-pg-version }}
        PGRX_PKG_PATH_PREFIX: ${{ inputs.cargo-target-dir }}
        PKG_PG_VERSION: ${{ inputs.pkg-pg-version }}
        SCCACHE_DIR: ${{ inputs.sccache-dir }}
        DOCKER_BUILD_USER: ${{ inputs.user }}
      run: |
        su idkit -c "cargo check"

    # Run cargo build
    - name: Run cargo test
      shell: sh
      env:
        CARGO_BUILD_RUSTC_WRAPPER: ${{ inputs.cargo-build-rustc-wrapper }}
        CARGO_HOME: ${{ inputs.cargo-home-dir }}
        CARGO_INCREMENTAL: ${{ inputs.cargo-env-incrmental }}
        CARGO_PROFILE: ${{ inputs.cargo-profile }}
        CARGO_TARGET_DIR: ${{ inputs.cargo-target-dir }}
        PGRX_PG_VERSION: ${{ inputs.pgrx-pg-version }}
        PGRX_PKG_PATH_PREFIX: ${{ inputs.cargo-target-dir }}
        PKG_PG_VERSION: ${{ inputs.pkg-pg-version }}
        SCCACHE_DIR: ${{ inputs.sccache-dir }}
        DOCKER_BUILD_USER: ${{ inputs.user }}
      run: |
        su idkit -c "cargo build"

    # Run cargo test
    - name: Run cargo test
      shell: sh
      env:
        CARGO_BUILD_RUSTC_WRAPPER: ${{ inputs.cargo-build-rustc-wrapper }}
        CARGO_HOME: ${{ inputs.cargo-home-dir }}
        CARGO_INCREMENTAL: ${{ inputs.cargo-env-incrmental }}
        CARGO_PROFILE: ${{ inputs.cargo-profile }}
        CARGO_TARGET_DIR: ${{ inputs.cargo-target-dir }}
        PGRX_PG_VERSION: ${{ inputs.pgrx-pg-version }}
        PKG_PG_VERSION: ${{ inputs.pkg-pg-version }}
        SCCACHE_DIR: ${{ inputs.sccache-dir }}
        DOCKER_BUILD_USER: ${{ inputs.user }}
      run: |
        su idkit -c "cargo test"

    #############
    # Artifacts #
    #############

    # Run cargo test
    - name: Build a package
      if: ${{ inputs.artifact-upload == 'true' }}
      shell: sh
      env:
        CARGO_BUILD_RUSTC_WRAPPER: ${{ inputs.cargo-build-rustc-wrapper }}
        CARGO_HOME: ${{ inputs.cargo-home-dir }}
        CARGO_INCREMENTAL: ${{ inputs.cargo-env-incrmental }}
        CARGO_PROFILE: ${{ inputs.cargo-profile }}
        CARGO_TARGET_DIR: ${{ inputs.cargo-target-dir }}
        PGRX_PG_VERSION: ${{ inputs.pgrx-pg-version }}
        PGRX_PKG_PATH_PREFIX: ${{ inputs.cargo-target-dir }}
        PKG_PG_VERSION: ${{ inputs.pkg-pg-version }}
        PKG_TARBALL_SUFFIX: ${{ inputs.artifact-tarball-suffix }}
        SCCACHE_DIR: ${{ inputs.sccache-dir }}
        DOCKER_BUILD_USER: ${{ inputs.user }}
      run: |
        su idkit -c "just package"

    # Upload artifact
    - name: Upload artifact
      if: ${{ inputs.artifact-upload == 'true' }}
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        path: pg_idkit-*.tar.gz
