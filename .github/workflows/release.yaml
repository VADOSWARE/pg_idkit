name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to release (ex. `0.1.0`)
        required: false
        type: string

  push:
    branches:
      # Run on all commits to main, because GitHub somehow doesn't support only specifying tag patterns
      # (filtering must be done at the per-job level with an `if`)
      - main
      # Run on auto-generated release PRs
      - prep-release-v[0-9]+\.[0-9]+\.[0-9]+
    tags:
      # Run on released tags (created by automated post-merge release-tagging), to generate the actual release
      - v[0-9]+\.[0-9]+\.[0-9]+

concurrency:
  group: release

jobs:
  build-rpm:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/prep-release-v')  }}
    strategy:
      matrix:
        config:
          - pgrx:
              pg-version: pg15
            pg:
              version: "15.13"
          - pgrx:
              pg-version: pg16
            pg:
              version: "16.9"
          - pgrx:
              pg-version: pg17
            pg:
              version: "17.5"
          - pgrx:
              pg-version: pg18
            pg:
              version: "18.0"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Build the RPM (reuse workflow)
        uses: ./.github/workflows/build-rpm
        with:
          artifact-upload: true
          pgrx-pg-version: ${{ matrix.config.pgrx.pg-version }}
          pg-version: ${{ matrix.config.pg.version }}

  build-zip:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/prep-release-v')  }}
    container:
      image: ghcr.io/vadosware/pg_idkit/builder-${{ matrix.libc }}:0.1.x
    strategy:
      matrix:
        libc:
          - gnu
          - musl
        config:
          - pgrx:
              pg-version: pg15
            pg:
              version: "15.13"
          - pgrx:
              pg-version: pg16
            pg:
              version: "16.9"
          - pgrx:
              pg-version: pg17
            pg:
              version: "17.5"
          - pgrx:
              pg-version: pg18
            pg:
              version: "18.0"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Build and test
        uses: ./.github/workflows/build-and-test
        with:
          libc: ${{ matrix.libc }}
          artifact-upload: true
          artifact-tarball-suffix: "-${{ matrix.config.pgrx.pg-version }}-${{ matrix.libc }}"
          pgrx-pg-version: ${{ matrix.config.pgrx.pg-version }}
          pkg-pg-version: ${{ matrix.config.pg.version }}

  release:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/heads/prep-release-v')  }}
    permissions:
      contents: write
    needs:
      - build-rpm
      - build-zip
    steps:
      # Checkout the repository
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # Download all artifacts
      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          path: artifacts

      # Create release (pre-release if we're prepping)
      - name: Create release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        with:
          prerelease: ${{ startsWith(github.ref, 'refs/heads/prep-release') }}
          draft: ${{ startsWith(github.ref, 'refs/heads/prep-release') }}
          tag_name: ${{ github.ref_name || inputs.version }}
          # NOTE: while we have the CHANGELOG file, it always contains *all* changes,
          # so we will use the generated GitHub commits for now
          generate_release_notes: true
          files: |
            ./artifacts/*/*
