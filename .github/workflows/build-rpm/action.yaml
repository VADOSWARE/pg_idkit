name: build-rpm
description: Build an RPM for pg_idkit
inputs:
  artifact-upload:
    type: boolean
    description: |
      Whether to upload an artifact or not
  artifact-name:
    type: string
    description: |
      Desired artifact name (will replace the natural name)
  gh-runner:
    type: string
    default: ubuntu-latest
    decription: |
      GitHub runner to use
  rpm-arch:
    type: string
    default: x86_64
    decription: |
      Architecture to use while building the RPM
  pgrx-pg-version:
    type: string
    default: pg16
    decription: |
      PGRX version (ex. 'pg15', 'pg16')
  pg-version:
    type: string
    default: 16.1
    decription: |
      Postgres version (ex. '15.5, '16.1')
outputs: {}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - uses: Swatinem/rust-cache@v2

    - name: Cache default PGRX_HOME
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          /home/runner/.pgrx
        key: pg_idkit-pkg-rpm-pgrx-${{ inputs.rpm-arch }}-${{ inputs.gh-runner }}

    - name: Install Rust deps
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-get,just,cargo-generate-rpm,cargo-pgrx@0.11.0

    - name: Initialize cargo-pgrx
      shell: bash
      env:
        PGRX_PG_VERSION: ${{ inputs.pgrx-pg-version }}
        PKG_PG_VERSION: ${{ inputs.pg-version }}
      run: |
        [[ -d /home/runner/.pgrx ]] || cargo pgrx init

    - name: Build RPM
      shell: bash
      env:
        PGRX_PG_VERSION: ${{ inputs.pgrx-pg-version }}
        PKG_PG_VERSION: ${{ inputs.pg-version }}
      run: just package build-rpm

    - name: Get RPM output path
      id: rpm-output
      shell: bash
      env:
        PGRX_PG_VERSION: ${{ inputs.pgrx-pg-version }}
        PKG_PG_VERSION: ${{ inputs.pg-version }}
      run: |
        echo path=$(just print-rpm-output-path) >> $GITHUB_OUTPUT
        echo filename=$(just print-rpm-output-file-name) >> $GITHUB_OUTPUT

    - name: Upload artifact
      if: ${{ inputs.artifact-upload }}
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.rpm-output.outputs.filename }}
        path: ${{ steps.rpm-output.outputs.path }}
